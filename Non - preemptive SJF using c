#include <stdio.h>

struct process {
    int id;
    int arrival_time;
    int burst_time;
    int completion_time;
    int turnaround_time;
    int waiting_time;
    int is_completed;
};

int main() {
    int n, i, j, min_bt_index, time = 0;
    float avg_waiting_time = 0, avg_turnaround_time = 0;
    struct process p[10], temp;

    printf("Enter the number of processes: ");
    scanf("%d", &n);

    for (i = 0; i < n; i++) {
        printf("Enter the arrival time and burst time for process P%d: ", i);
        scanf("%d %d", &p[i].arrival_time, &p[i].burst_time);
        p[i].id = i;
        p[i].is_completed = 0;
    }

    for (i = 0; i < n - 1; i++) {
        for (j = i + 1; j < n; j++) {
            if (p[i].arrival_time > p[j].arrival_time) {
                temp = p[i];
                p[i] = p[j];
                p[j] = temp;
            }
        }
    }

    time = p[0].arrival_time;

    for (i = 0; i < n; i++) {
        min_bt_index = -1;
        for (j = 0; j < n; j++) {
            if (p[j].arrival_time <= time && p[j].is_completed == 0) {
                if (min_bt_index == -1 || p[j].burst_time < p[min_bt_index].burst_time) {
                    min_bt_index = j;
                }
            }
        }

        if (min_bt_index == -1) {
            time++;
            i--;
            continue;
        }

        p[min_bt_index].completion_time = time + p[min_bt_index].burst_time;
        p[min_bt_index].turnaround_time = p[min_bt_index].completion_time - p[min_bt_index].arrival_time;
        p[min_bt_index].waiting_time = p[min_bt_index].turnaround_time - p[min_bt_index].burst_time;
        avg_waiting_time += p[min_bt_index].waiting_time;
        avg_turnaround_time += p[min_bt_index].turnaround_time;
        p[min_bt_index].is_completed = 1;
        time = p[min_bt_index].completion_time;
    }

    avg_waiting_time /= n;
    avg_turnaround_time /= n;

    printf("ID\tAT\tBT\tCT\tTAT\tWT\n");
    for (i = 0; i < n; i++) {
        printf("P%d\t%d\t%d\t%d\t%d\t%d\n", p[i].id, p[i].arrival_time, p[i].burst_time, p[i].completion_time, p[i].turnaround_time, p[i].waiting_time);
    }

    printf("Average Waiting Time: %.2f\n", avg_waiting_time);
    printf("Average Turnaround Time: %.2f\n", avg_turnaround_time);

    return 0;
}
